[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "aiida-nanotech-empa"
dynamic = ["version"]
description = "AiiDA plugins and workflows developed at nanotech@surfaces group from Empa."
authors = [{name = "nanotech@surfaces"}]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: AiiDA",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering",
]
requires-python = ">=3.8"
dependencies = [
    "aiida-core>=2.0.0,<3.0.0",
    "aiida-quantumespresso>=4.1.0",
    "aiida-pseudo>=0.8.0",
    "aiida-cp2k>=2.0.0b0",
    "ase",
    "aiida-gaussian>=2.0.0",
    "pillow>=8.0.0",
    "more-itertools",
]

[project.urls]
Homepage = "https://github.com/nanotech-empa/aiida-nanotech-empa"

[project.optional-dependencies]
dev = [
    "pgtest~=1.3.1",
    "pytest~=6.0",
    "pytest-cov",
    "pre-commit>=2.19",
    "bumpver==2022.1119",
    "coverage",
]

[project.entry-points."aiida.parsers"]
"nanotech_empa.pp" = "aiida_nanotech_empa.parsers.pp_parser:PpParser"
"nanotech_empa.cp2k_gw_parser" = "aiida_nanotech_empa.parsers.cp2k_gw_parser:Cp2kGWParser"
"nanotech_empa.gaussian.cubegen_pymol" = "aiida_nanotech_empa.parsers.cubegen_pymol_parser:CubegenPymolParser"
"nanotech_empa.gaussian.casscf" = "aiida_nanotech_empa.parsers.gaussian_casscf_parser:GaussianCasscfParser"

[project.entry-points."aiida.workflows"]
"nanotech_empa.nanoribbon" = "aiida_nanotech_empa.workflows.qe.nanoribbon:NanoribbonWorkChain"
"nanotech_empa.gaussian.scf" = "aiida_nanotech_empa.workflows.gaussian:GaussianScfWorkChain"
"nanotech_empa.gaussian.relax" = "aiida_nanotech_empa.workflows.gaussian:GaussianRelaxWorkChain"
"nanotech_empa.gaussian.delta_scf" = "aiida_nanotech_empa.workflows.gaussian:GaussianDeltaScfWorkChain"
"nanotech_empa.gaussian.natorb" = "aiida_nanotech_empa.workflows.gaussian:GaussianNatOrbWorkChain"
"nanotech_empa.gaussian.spin" = "aiida_nanotech_empa.workflows.gaussian:GaussianSpinWorkChain"
"nanotech_empa.gaussian.hf_mp2" = "aiida_nanotech_empa.workflows.gaussian:GaussianHfMp2WorkChain"
"nanotech_empa.gaussian.constr_opt_chain" = "aiida_nanotech_empa.workflows.gaussian:GaussianConstrOptChainWorkChain"
"nanotech_empa.gaussian.casscf" = "aiida_nanotech_empa.workflows.gaussian:GaussianCasscfWorkChain"
"nanotech_empa.gaussian.casscf_series" = "aiida_nanotech_empa.workflows.gaussian:GaussianCasscfSeriesWorkChain"
"nanotech_empa.cp2k.molecule_opt" = "aiida_nanotech_empa.workflows.cp2k.molecule_opt_workchain:Cp2kMoleculeOptWorkChain"
"nanotech_empa.cp2k.slab_opt" = "aiida_nanotech_empa.workflows.cp2k.slab_opt_workchain:Cp2kSlabOptWorkChain"
"nanotech_empa.cp2k.bulk_opt" = "aiida_nanotech_empa.workflows.cp2k.bulk_opt_workchain:Cp2kBulkOptWorkChain"
"nanotech_empa.cp2k.molecule_gw" = "aiida_nanotech_empa.workflows.cp2k.molecule_gw_workchain:Cp2kMoleculeGwWorkChain"
"nanotech_empa.cp2k.fragment_separation" = "aiida_nanotech_empa.workflows.cp2k.fragment_separation:Cp2kFragmentSeparationWorkChain"
"nanotech_empa.cp2k.ads_gw_ic" = "aiida_nanotech_empa.workflows.cp2k.adsorbed_gw_ic_workchain:Cp2kAdsorbedGwIcWorkChain"
"nanotech_empa.cp2k.mol_opt_gw" = "aiida_nanotech_empa.workflows.cp2k.molecule_opt_gw_workchain:Cp2kMoleculeOptGwWorkChain"

[project.entry-points."aiida.schedulers"]
lsf_ethz_euler = "aiida_nanotech_empa.schedulers.lsf_ethz_euler:ETHZEulerLsfScheduler"

[tool.bumpver]
current_version = "v1.0.0a0"
version_pattern = "vMAJOR.MINOR.PATCH[PYTAGNUM]"
commit_message = "Bump version {old_version} -> {new_version}."
commit = true
tag = true
push = true

[tool.bumpver.file_patterns]
"aiida_nanotech_empa/version.py" = [
    '__version__ = "{pep440_version}"',
]
